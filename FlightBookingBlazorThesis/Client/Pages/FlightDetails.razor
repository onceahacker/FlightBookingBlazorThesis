@page "/flight/{Number:int}"
@inject IFlightService FlightService

@if(flight == null)
{
    <span>@message </span>
}
else
{
    <div class="media">
        <div class="media-img-wrapper mr-2">
            <img class="media-img" src="@flight.ImageUrl" alt="@flight.Destination" />
        </div>
        <div class="media-body">
            <h2 class="mb-0">@flight.Destination</h2>
            <p><strong>Departure Date:</strong> @flight.DepartureDate.ToShortDateString()</p>
            <p>@flight.Details</p>
            @if (flight.Variants != null && flight.Variants.Count > 1)
            {
             <div class="form-group">
                    <select class="form-control" @bind="currentTypeId">
                            @foreach(var variant in flight.Variants)
                            {
                                <option value="@variant.FlightTypeId">@variant.FlightType.Name</option>
                            }
                    </select>
              </div>
            }
           

            @if(GetSelectedVariant() != null)
            {
                @if(GetSelectedVariant().OriginalPrice > GetSelectedVariant().Price)
                {
                    <h6 class="text-muted original-price">$@GetSelectedVariant().OriginalPrice</h6>
                }
                <h4 class="price">
                    $@GetSelectedVariant().Price
                </h4>
            }
        </div>
     </div>

}

@code {
    private Flight? flight = null;
    private string message = string.Empty;
    private int currentTypeId = 1;

    [Parameter]
    public int Number { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        message = "Loading the flight deatils...";
        var result = await FlightService.GetFlight(Number);
        if(!result.Success)
        {
            message = result.Message;
        }
        else
        {
            flight = result.Data;
            if(flight.Variants.Count > 0)
            {
                currentTypeId = flight.Variants[0].FlightTypeId;
            }
        }
    }
    private FlightVariant GetSelectedVariant()
    {
        var variant = flight.Variants.FirstOrDefault(v => v.FlightTypeId == currentTypeId);
        return variant;
    }
}
